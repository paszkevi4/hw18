{"version":3,"sources":["store/postsReducer.ts","store/usersReducer.ts","store/store.ts","components/Sidebar/Sidebar.tsx","components/Main/Main.tsx","components/Contacts/Contacs.tsx","components/Photos/Photos.tsx","components/Posts/AddPost/AddPost.tsx","components/Posts/AddPost/AddPostContainer.ts","components/Posts/Post/Post.tsx","components/Posts/Posts.tsx","components/Posts/PostsContainer.tsx","App.tsx","index.tsx"],"names":["initialState","author","publicationDate","Date","text","image","liked","likesAmount","commentariesAmount","repostAmount","reposted","postsReducer","state","action","type","post","map","el","i","index","name","avatar","nickname","usersReducer","rootReducer","combineReducers","posts","users","store","createStore","Sidebar","className","to","Main","Contacs","Photos","AddPost","props","useState","user","setUser","setText","setImageUrl","onClick","length","src","placeholder","value","onChange","e","target","createNewPost","now","connect","likePost","repost","date","content","likes","comments","reposts","alt","toLocaleDateString","getHours","getMinutes","style","color","Favorite","Chat","Share","Posts","App","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"oRAmCMA,EAAgC,CACpC,CACEC,OAAQ,EACRC,gBAAiB,IAAIC,KAAK,KAAM,EAAG,GAAI,GAAI,IAC3CC,KAAM,gBACNC,MACE,gGACFC,OAAO,EACPC,YAAa,EACbC,mBAAoB,EACpBC,aAAc,EACdC,UAAU,GAEZ,CACET,OAAQ,EACRC,gBAAiB,IAAIC,KAAK,KAAM,EAAG,GAAI,GAAI,IAC3CC,KAAM,mBACNC,MACE,gGAEFC,OAAO,EACPC,YAAa,GACbC,mBAAoB,GACpBC,aAAc,GACdC,UAAU,IAgDCC,EA5CM,WAAgE,IAA/DC,EAA8D,uDAAtDZ,EAAca,EAAwC,uCAClF,OAAQA,EAAOC,MACb,IAjEoB,kBAkElB,MAAM,GAAN,mBAAWF,GAAX,gBAAuBC,EAAOE,QAChC,IAlEc,YAmEZ,OAAO,YACFH,EAAMI,KAAI,SAACC,EAAIC,GAChB,OAAIA,IAAML,EAAOM,MACR,2BAAKF,GAAZ,IAAgBX,MAAOO,EAAOP,QAEzB,eAAKW,OAGlB,IA1EW,SA2ET,OAAO,YACFL,EAAMI,KAAI,SAACC,EAAIC,GAChB,OAAIA,IAAML,EAAOM,MACR,2BAAKF,GAAZ,IAAgBP,SAAUG,EAAOH,WAE5B,eAAKO,OAGlB,QACE,OAAOL,IChFPZ,EAAgC,CACpC,CACEoB,KAAM,mBACNC,OACE,6FACFC,SAAU,cAEZ,CACEF,KAAM,cACNC,OAAQ,oFACRC,SAAU,oBAWCC,EAPM,WAAwC,IAAvCX,EAAsC,uDAA9BZ,EAAca,EAAgB,uCAGtD,OAFIA,EAAOC,KAEJF,GClBTY,EAAcC,YAAgB,CAChCC,MAAOf,EACPgB,MAAOJ,IAOMK,EAFHC,YAAYL,G,eCETM,EAXW,WACxB,OACE,yBAAKC,UAAU,WACb,kBAAC,IAAD,CAASC,GAAG,SAAZ,QACA,kBAAC,IAAD,CAASA,GAAG,aAAZ,YACA,kBAAC,IAAD,CAASA,GAAG,UAAZ,SACA,kBAAC,IAAD,CAASA,GAAG,WAAZ,YCCSC,EARQ,WACrB,OACE,6BACE,yBAAKF,UAAU,QAAf,UCKSG,EARW,WACxB,OACE,6BACE,yBAAKH,UAAU,OAAf,cCKSI,EARU,WACvB,OACE,6BACE,yBAAKJ,UAAU,UAAf,Y,QCsDSK,G,MAxDgB,SAACC,GAAW,IAAD,EAClBC,mBAAS,GADS,mBACnCC,EADmC,KAC7BC,EAD6B,OAElBF,mBAAS,IAFS,mBAEnClC,EAFmC,KAE7BqC,EAF6B,OAGbH,mBAAS,IAHI,mBAGnCjC,EAHmC,KAG5BqC,EAH4B,KA+BxC,OACE,yBAAKX,UAAU,qBACb,yBAAKY,QA5BU,WACbJ,EAAOF,EAAMV,MAAMiB,OAAS,EAC9BJ,IAAUD,GAEVC,EAAQ,IAwBkBT,UAAU,kBAClC,yBAAKc,IAAKR,EAAMV,MAAMY,GAAMlB,SAC5B,4CAEF,8BACEyB,YAAY,mBACZC,MAAO3C,EACP4C,SAAU,SAACC,GACTR,EAAQQ,EAAEC,OAAOH,UAGrB,2BACED,YAAY,YACZC,MAAO1C,EACP2C,SAAU,SAACC,GACTP,EAAYO,EAAEC,OAAOH,UAGzB,4BAAQJ,QAtCO,WACjBF,EAAQ,IACRC,EAAY,IACZL,EAAMc,cAAc,CAClBlD,OAAQsC,EACRlB,OAAQ,SACRC,SAAU,SACVpB,gBAAiB,IAAIC,KAAKA,KAAKiD,OAC/BhD,KAAMA,EACNC,MAAOA,EACPE,YAAa,EACbD,OAAO,EACPE,mBAAoB,EACpBC,aAAc,EACdC,UAAU,MAwBV,aCnCS2C,eAdS,SAACzB,GACvB,MAAO,CACLD,MAAOC,EAAMD,SAYuB,CAAEwB,cRuEd,SAACpC,GAAD,MAAuC,CACjED,KA3FsB,kBA4FtBC,UQzEasC,CAA0DjB,G,wCC0D1DiB,cAAQ,KAAM,CAAEC,STkBD,SAACnC,EAAeb,GAAhB,MAAoD,CAChFQ,KA/FgB,YAgGhBK,QACAb,USrBuDiD,OTwB7B,SAACpC,EAAeT,GAAhB,MAAqD,CAC/EI,KApGa,SAqGbK,QACAT,cS3Ba2C,EAvEa,SAAC,GActB,IAbLlC,EAaI,EAbJA,MACAC,EAYI,EAZJA,KACAC,EAWI,EAXJA,OACAC,EAUI,EAVJA,SACAkC,EASI,EATJA,KACAC,EAQI,EARJA,QACApD,EAOI,EAPJA,MACAC,EAMI,EANJA,MACAoD,EAKI,EALJA,MACAC,EAII,EAJJA,SACAjD,EAGI,EAHJA,SACAkD,EAEI,EAFJA,QACGvB,EACC,6HACJ,OACE,yBAAKN,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,sBAAsBc,IAAKxB,EAAQwC,IAAI,gBACtD,yBAAK9B,UAAU,qBACb,6BACGX,EACD,kCAAQE,IAEV,6BACGkC,EAAKM,mBAAmB,SAD3B,IACsCN,EAAKO,WAD3C,IACwDP,EAAKQ,gBAIjE,yBAAKjC,UAAU,aACZ0B,EACApD,GAAS,yBAAKwC,IAAKxC,EAAOwD,IAAI,gBAGjC,yBAAK9B,UAAU,eACb,yBACEY,QAAS,WACPN,EAAMiB,SAASnC,GAAQb,IAEzB2D,MAAO3D,EAAQ,CAAE4D,MAAO,OAAU,CAAEA,MAAO,UAC3C,kBAACC,EAAA,EAAD,MACCT,EAAQpD,GAEX,6BACE,kBAAC8D,EAAA,EAAD,MACCT,GAEH,yBACEhB,QAAS,WACPN,EAAMkB,OAAOpC,GAAQT,IAEvBuD,MAAOvD,EAAW,CAAEwD,MAAO,QAAW,CAAEA,MAAO,UAC/C,kBAACG,EAAA,EAAD,MACCT,EAAUlD,QCrBN4D,EA1Bc,SAAC,GAAsB,IAApB5C,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACrC,OACE,yBAAKI,UAAU,gBACZL,EAAMV,KAAI,SAACD,EAAgBG,GAC1B,OACE,kBAAC,EAAD,CACEC,MAAOD,EACPE,KAAMO,EAAMZ,EAAKd,QAAQmB,KACzBC,OAAQM,EAAMZ,EAAKd,QAAQoB,OAC3BC,SAAUK,EAAMZ,EAAKd,QAAQqB,SAC7BkC,KAAMzC,EAAKb,gBACXuD,QAAS1C,EAAKX,KACdC,MAAOU,EAAKV,MACZC,MAAOS,EAAKT,MACZoD,MAAO3C,EAAKR,YACZoD,SAAU5C,EAAKP,mBACfE,SAAUK,EAAKL,SACfkD,QAAS7C,EAAKN,kBAIpB,kBAAC,EAAD,QCtBS4C,eAPS,SAACzB,GACvB,MAAO,CACLF,MAAOE,EAAMF,MACbC,MAAOC,EAAMD,SAIuB,KAAzB0B,CAA+BiB,GCuB/BC,G,MAnBO,WACpB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAU3C,MAAOA,GACf,kBAAC,IAAD,KACE,yBAAKG,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOyC,KAAK,QAAQC,OAAQ,kBAAM,kBAAC,EAAD,SAClC,kBAAC,IAAD,CAAOD,KAAK,YAAYC,OAAQ,kBAAM,kBAAC,EAAD,SACtC,kBAAC,IAAD,CAAOD,KAAK,UAAUC,OAAQ,kBAAM,kBAAC,EAAD,SACpC,kBAAC,IAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,kBAAC,EAAD,SACnC,kBAAC,IAAD,CAAOD,KAAK,IAAIC,OAAQ,kBAAM,kBAAC,IAAD,CAAUzC,GAAG,mBCtBvD0C,IAASD,OACP,kBAAC,IAAME,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.5518c054.chunk.js","sourcesContent":["const CREATE_NEW_POST = 'CREATE_NEW_POST';\r\nconst LIKE_POST = 'LIKE_POST';\r\nconst REPOST = 'REPOST';\r\n\r\nexport type PostType = {\r\n  author: number;\r\n  publicationDate: Date | string;\r\n  text: string;\r\n  image: string;\r\n  likesAmount: number;\r\n  liked: boolean;\r\n  commentariesAmount: number;\r\n  repostAmount: number;\r\n  reposted: boolean;\r\n};\r\n\r\nexport type createPostACType = {\r\n  type: typeof CREATE_NEW_POST;\r\n  post: PostType;\r\n};\r\n\r\ntype likePostACType = {\r\n  type: typeof LIKE_POST;\r\n  index: number;\r\n  liked: boolean;\r\n};\r\n\r\ntype repostACType = {\r\n  type: typeof REPOST;\r\n  index: number;\r\n  reposted: boolean;\r\n};\r\n\r\ntype actionType = createPostACType | likePostACType | repostACType;\r\n\r\nconst initialState: Array<PostType> = [\r\n  {\r\n    author: 0,\r\n    publicationDate: new Date(2020, 8, 15, 23, 15),\r\n    text: 'Hello, world!',\r\n    image:\r\n      'https://specials-images.forbesimg.com/imageserve/5e63b3c8e1e617000759130e/960x0.jpg?fit=scale',\r\n    liked: false,\r\n    likesAmount: 5,\r\n    commentariesAmount: 3,\r\n    repostAmount: 1,\r\n    reposted: true,\r\n  },\r\n  {\r\n    author: 1,\r\n    publicationDate: new Date(2020, 8, 17, 15, 47),\r\n    text: 'Hello, everyone!',\r\n    image:\r\n      'https://specials-images.forbesimg.com/imageserve/5e63b3c8e1e617000759130e/960x0.jpg?fit=scale',\r\n\r\n    liked: true,\r\n    likesAmount: 51,\r\n    commentariesAmount: 31,\r\n    repostAmount: 11,\r\n    reposted: false,\r\n  },\r\n];\r\n\r\nconst postsReducer = (state = initialState, action: actionType): Array<PostType> => {\r\n  switch (action.type) {\r\n    case CREATE_NEW_POST:\r\n      return [...state, { ...action.post }];\r\n    case LIKE_POST:\r\n      return [\r\n        ...state.map((el, i) => {\r\n          if (i === action.index) {\r\n            return { ...el, liked: action.liked };\r\n          }\r\n          return { ...el };\r\n        }),\r\n      ];\r\n    case REPOST:\r\n      return [\r\n        ...state.map((el, i) => {\r\n          if (i === action.index) {\r\n            return { ...el, reposted: action.reposted };\r\n          }\r\n          return { ...el };\r\n        }),\r\n      ];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const createPostAC = (post: PostType): createPostACType => ({\r\n  type: CREATE_NEW_POST,\r\n  post,\r\n});\r\n\r\nexport const likePostPostAC = (index: number, liked: boolean): likePostACType => ({\r\n  type: LIKE_POST,\r\n  index,\r\n  liked,\r\n});\r\n\r\nexport const repostPostAC = (index: number, reposted: boolean): repostACType => ({\r\n  type: REPOST,\r\n  index,\r\n  reposted,\r\n});\r\n\r\nexport default postsReducer;\r\n","type UserType = {\r\n  name: string;\r\n  avatar: string;\r\n  nickname: string;\r\n};\r\n\r\nconst initialState: Array<UserType> = [\r\n  {\r\n    name: 'Anakin Skywalker',\r\n    avatar:\r\n      'https://upload.wikimedia.org/wikipedia/en/thumb/7/74/Anakin-Jedi.jpg/220px-Anakin-Jedi.jpg',\r\n    nickname: 'dart_vader',\r\n  },\r\n  {\r\n    name: 'Bruce Wayne',\r\n    avatar: 'https://icons.iconarchive.com/icons/diversity-avatars/avatars/256/batman-icon.png',\r\n    nickname: 'batman_official',\r\n  },\r\n];\r\n\r\nconst usersReducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default usersReducer;\r\n","import { createStore, combineReducers } from 'redux';\r\n\r\nimport postsReducer from './postsReducer';\r\nimport usersReducer from './usersReducer';\r\n\r\nlet rootReducer = combineReducers({\r\n  posts: postsReducer,\r\n  users: usersReducer,\r\n});\r\n\r\nexport type RootReducerType = ReturnType<typeof rootReducer>;\r\n\r\nlet store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Sidebar: React.FC = () => {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <NavLink to=\"/main\">Main</NavLink>\r\n      <NavLink to=\"/contacts\">Contacts</NavLink>\r\n      <NavLink to=\"/posts\">Posts</NavLink>\r\n      <NavLink to=\"/photos\">Photos</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\n\r\nconst Main: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"main\">main</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nconst Contacs: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"con\">contacts</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contacs;\r\n","import React from 'react';\r\n\r\nconst Photos: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"photos\">photos</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Photos;\r\n","import React, { useState } from 'react';\r\nimport './addpost.css';\r\n\r\nconst AddPost: React.FC<any> = (props) => {\r\n  let [user, setUser] = useState(0);\r\n  let [text, setText] = useState('');\r\n  let [image, setImageUrl] = useState('');\r\n\r\n  const changeUser = () => {\r\n    if (user < props.users.length - 1) {\r\n      setUser(++user);\r\n    } else {\r\n      setUser(0);\r\n    }\r\n  };\r\n\r\n  const submitForm = () => {\r\n    setText('');\r\n    setImageUrl('');\r\n    props.createNewPost({\r\n      author: user,\r\n      avatar: 'string',\r\n      nickname: 'string',\r\n      publicationDate: new Date(Date.now()),\r\n      text: text,\r\n      image: image,\r\n      likesAmount: 0,\r\n      liked: false,\r\n      commentariesAmount: 0,\r\n      repostAmount: 0,\r\n      reposted: false,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"addpost_container\">\r\n      <div onClick={changeUser} className=\"addpost_avatar\">\r\n        <img src={props.users[user].avatar} />\r\n        <span>swap user</span>\r\n      </div>\r\n      <textarea\r\n        placeholder=\"What's going on?\"\r\n        value={text}\r\n        onChange={(e) => {\r\n          setText(e.target.value);\r\n        }}\r\n      />\r\n      <input\r\n        placeholder=\"image url\"\r\n        value={image}\r\n        onChange={(e) => {\r\n          setImageUrl(e.target.value);\r\n        }}\r\n      />\r\n      <button onClick={submitForm}>Submit</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPost;\r\n","import { connect } from 'react-redux';\r\nimport { RootReducerType } from '../../../store/store';\r\nimport { createPostAC } from '../../../store/postsReducer';\r\nimport AddPost from './AddPost';\r\n\r\nconst mapStateToProps = (store: RootReducerType) => {\r\n  return {\r\n    users: store.users,\r\n  };\r\n};\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     createNewPost: (newPost) => {\r\n//       dispatch(createPostAC(newPost));\r\n//     },\r\n//   };\r\n// };\r\n\r\nexport default connect(mapStateToProps, { createNewPost: createPostAC })(AddPost);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { likePostPostAC, repostPostAC } from '../../../store/postsReducer';\r\nimport './post.css';\r\nimport { Favorite, Chat, Share } from '@material-ui/icons';\r\n\r\nconst Post: React.FC<any> = ({\r\n  index,\r\n  name,\r\n  avatar,\r\n  nickname,\r\n  date,\r\n  content,\r\n  image,\r\n  liked,\r\n  likes,\r\n  comments,\r\n  reposted,\r\n  reposts,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div className=\"post_container\">\r\n      <div className=\"post_header\">\r\n        <img className=\"post_header__avatar\" src={avatar} alt=\"user_avatar\" />\r\n        <div className=\"post_header__name\">\r\n          <div>\r\n            {name}\r\n            <span>@{nickname}</span>\r\n          </div>\r\n          <div>\r\n            {date.toLocaleDateString('ru-RU')} {date.getHours()}:{date.getMinutes()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"post_body\">\r\n        {content}\r\n        {image && <img src={image} alt=\"post_image\" />}\r\n      </div>\r\n\r\n      <div className=\"post_footer\">\r\n        <div\r\n          onClick={() => {\r\n            props.likePost(index, !liked);\r\n          }}\r\n          style={liked ? { color: 'red' } : { color: 'black' }}>\r\n          <Favorite />\r\n          {likes + liked}\r\n        </div>\r\n        <div>\r\n          <Chat />\r\n          {comments}\r\n        </div>\r\n        <div\r\n          onClick={() => {\r\n            props.repost(index, !reposted);\r\n          }}\r\n          style={reposted ? { color: 'blue' } : { color: 'black' }}>\r\n          <Share />\r\n          {reposts + reposted}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     likePost: (index, liked) => {\r\n//       dispatch(likePostPostAC(index, liked));\r\n//     },\r\n//     repost: (index, reposted) => {\r\n//       dispatch(repostPostAC(index, reposted));\r\n//     },\r\n//   };\r\n// };\r\n\r\nexport default connect(null, { likePost: likePostPostAC, repost: repostPostAC })(Post);\r\n","import React from 'react';\r\n\r\nimport AddPost from './AddPost/AddPostContainer';\r\n//@ts-ignore\r\nimport Post from './Post/Post.tsx';\r\nimport { PostType } from '../../store/postsReducer';\r\n\r\ntype PropsType = {\r\n  posts: PostType;\r\n  users: any;\r\n};\r\n\r\nconst Posts: React.FC<any> = ({ posts, users }) => {\r\n  return (\r\n    <div className=\"posts_column\">\r\n      {posts.map((post: PostType, i: number) => {\r\n        return (\r\n          <Post\r\n            index={i}\r\n            name={users[post.author].name}\r\n            avatar={users[post.author].avatar}\r\n            nickname={users[post.author].nickname}\r\n            date={post.publicationDate}\r\n            content={post.text}\r\n            image={post.image}\r\n            liked={post.liked}\r\n            likes={post.likesAmount}\r\n            comments={post.commentariesAmount}\r\n            reposted={post.reposted}\r\n            reposts={post.repostAmount}\r\n          />\r\n        );\r\n      })}\r\n      <AddPost />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import Posts from './Posts';\r\nimport { connect } from 'react-redux';\r\nimport { RootReducerType } from '../../store/store';\r\n\r\nconst mapStateToProps = (store: RootReducerType) => {\r\n  return {\r\n    posts: store.posts,\r\n    users: store.users,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Posts);\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/store';\r\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\n// Components\r\nimport Sidebar from './components/Sidebar/Sidebar';\r\nimport Main from './components/Main/Main';\r\nimport Contacts from './components/Contacts/Contacs';\r\nimport Photos from './components/Photos/Photos';\r\nimport Posts from './components/Posts/PostsContainer';\r\n\r\n// Styles\r\nimport './App.css';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <Switch>\r\n          <div className=\"app\">\r\n            <Sidebar />\r\n            <Route path=\"/main\" render={() => <Main />} />\r\n            <Route path=\"/contacts\" render={() => <Contacts />} />\r\n            <Route path=\"/photos\" render={() => <Photos />} />\r\n            <Route path=\"/posts\" render={() => <Posts />} />\r\n            <Route path=\"*\" render={() => <Redirect to=\"/main\" />} />\r\n          </div>\r\n        </Switch>\r\n      </Provider>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}